{
    // Place your snippets for shellscript here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "for_i_loop": {
        "prefix": "fori",
        "body": [
            "for(let i = 0; i< ${1:variable}; i++){",
            "   ${2:CODE}",
            "}"
        ],
        "description": "for loop with i variable (OLD C99 HABIT)"
    },
    "init": {
        "prefix": "init",
        "body": [
            "async function ${1:function_name}(${2:params}){",
            "   ${3:code}",
            "}",
            "",
            "module.exports.${1:function_name} = ${1:function_name};"
        ],
        "description": "init for \"module\" code"
    },
    "destructure": {
        "prefix": "destructure",
        "body": [
            "const {${1:variable}} = ${2:object};"
        ],
        "description": "destructure object"
    }
}